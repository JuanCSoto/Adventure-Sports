@model Webcore.Areas.Admin.Models.QuestionModel
@{
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
@section headers {
    <script src="@Url.Content("~/Resources/Scripts/jquery.fcbkcomplete.min.js")" type="text/javascript"></script>
    @Scripts.Render("~/bundles/jquerycl")
    <script type="text/javascript" language="javascript">
        var tempfiles = new Array();
        contentType = "Question";
        var editor;

        $(document).ready(function () {
            $.cleditor.defaultOptions.height = 500;
            $.cleditor.defaultOptions.width = 720;
            $.cleditor.defaultOptions.docCSSFile = '@Url.Content("~/Resources/Css/frontend.styles.css")'
            $.cleditor.buttons.image.uploadUrl = '@(Url.Action("UploadImage", "Content", new { Area = "Admin" }) + (Model.IContent != null && Model.IContent.ContentId != null ? "?id=" + Model.IContent.ContentId : ""))';
            $.datepicker.formatDate('yy/mm/dd', new Date());
            @if (Model.Question != null && Model.Question.XCoordinate != null && Model.Question.YCoordinate != null)
            {
            @:google.maps.event.addDomListener(window, 'load', function(){initializeMapQuestion();
            @:  marker = new google.maps.Marker({
            @:    map: map,
            @:    position: new google.maps.LatLng(@(Model.Question.YCoordinate.ToString().Replace(',','.')), @(Model.Question.XCoordinate.ToString().Replace(',','.')))
            @:  });
            @:});
            }
            else{
            @:google.maps.event.addDomListener(window, 'load', initializeMapQuestion);
            }
            $('#Question_StartDate').datepicker({dateFormat: 'yy/mm/dd'});
            $('#Question_EndDate').datepicker({dateFormat: 'yy/mm/dd'});
            hideTemplates('question');
            $('#Form1').submit(function(event){
                var valid = true;
                var validImage = true;
                var validMinimumQuestions = true;
                var validDate = true;
                var today = new Date().setHours(0,0,0,0);

                $('#minimumQuestions').remove();
                $('#imageNeeded').remove();
                $('#finalDateInvalid').remove();
                if($('#Question_Type').val() == 'Seleccion_Multiple'){
                    if($('.answer').length < 2){
                        valid = false;
                        validMinimumQuestions = false;
                    }

                    $('#questionAnswers .text').each(function(){
                        if($(this).val() == ''){
                            valid = false;
                            validMinimumQuestions = false;
                            return false;
                        }
                    });
                }

                if($('#IContent_ContentId').val() == "" && $('#contentImage').val() == ""){
                    valid = false;
                    validImage = false;
                }

                if(today > new Date($('#Question_EndDate').val()) && $('#IContent_ContentId').val() == ""){
                    validDate = false;
                    valid = false;
                }

                if(!valid){
                    if($('.validation-summary-valid li').length <= 1 && $('.validation-summary-valid li').html() == ''){
                        $('.validation-summary-valid').removeClass('validation-summary-valid').addClass('validation-summary-errors');
                    }
                    if(!validMinimumQuestions){
                        $('.validation-summary-errors ul').append('<li id="minimumQuestions">Se necesitan al menos dos respuestas</li>');
                    }
                    if(!validImage){
                        $('.validation-summary-errors ul').append('<li id="imageNeeded">Se necesita una imagen</li>');
                    }
                    if(!validDate){
                        $('.validation-summary-errors ul').append('<li id="finalDateInvalid">La fecha final no es valida</li>');
                    }
                    event.preventDefault();
                }
                if($('#IContent_Active:checked').length == 0 && $('#IContent_Private:checked').length > 0){
                    alerts("Esta pregunta esta inactiva, no la puedes destacar");
                    event.preventDefault();
                }
            });
            (function($) {
                $.cleditor.defaultOptions.docType = "<!DOCTYPE html PUBLIC '-//W3C//DTD XHTML 1.0 Transitional//EN' 'http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd'>";
                $.cleditor.defaultOptions.updateTextArea = function(html) { //if (document.forms[0].debugArea) document.forms[0].debugArea.value = html;
                    // Normalize to xhtml/html5 common standards and only keep allowed tags.
                    var ary = html.split("<");
                    var end = -1;
                    for (var i=0; i<ary.length; i++) {
                        if (ary[i].lastIndexOf("!--[if ", 7) === 0) { // handle Microsoft <!--[if ... <![endif]-->
                            ary[i] = "";
                            var found = false;
                            for (i++; i<ary.length; i++) {
                                if (ary[i].lastIndexOf("![endif]-->", 11) === 0) {found = true;}
                                ary[i] = "";
                                if (found) break;
                            }
                            if (i>=ary.length) break;
                        }
                        end = ary[i].indexOf(">");
                        if (end == -1) continue;
                        ary[i] = ary[i].substring(0,end).toLowerCase()+ary[i].substring(end);
                        var search = ["strong>","em>","strike>","u>","br>"];
                        var replace = ["b>","i>","del>","ins>","br/>"];
                        for (var j=0; j<search.length; j++) {
                            var pos = ary[i].lastIndexOf(search[j], search[j].length+1);
                            if (pos == 0 || (pos == 1 && ary[i].charAt(0) == '/')) {
                                ary[i] = (pos == 1 ? "/" : "")+ replace[j] +ary[i].substring(search[j].length+pos);
                            }
                        }
                        var spellcheckerRE = /^\/?span[^\/>]*\/?>/m;
                        var cleanupRE = /^(\/?)(br|b|del|ins|i|li|ol|a|p|ul)[^a-zA-Z\/>]*[^\/>]*(\/?)>/m;
                        if(ary[i].indexOf("href") == -1){
                            if (spellcheckerRE.test(ary[i])) {
                                ary[i] = ary[i].replace(spellcheckerRE, "");
                            } else if (cleanupRE.test(ary[i])) {
                                ary[i] = ary[i].replace(cleanupRE, "<$1$2$3>");
                                ary[i] = ary[i].replace(/^<p>/, "");
                                ary[i] = ary[i].replace(/^<\/?p\/?>/, "<br/>");
                            } else {
                                ary[i] = end+1 < ary[i].length ? ary[i].substring(end+1) : "";
                            }
                        }
                        else{
                            ary[i] = '<' + ary[i];
                        }
                        ary[i] = ary[i].replace(/&nbsp;/gm, "");
                        ary[i] = ary[i].replace(/\n\n/gm, "\n");
                    }
                    html = ary.join("");
                    // Trim leading whitespace.
                    var trimRE = /^(\s+|&nbsp;|<br\/?>|<p>(&nbsp;)*<\/p>)+/m;
                    if (trimRE.test(html)) {
                        html = html.replace(trimRE, "");
                    }
                    // Test if there is any actual non-whitespace text content.
                    var body = document.getElementsByTagName("body")[0];
                    var div = document.createElement("div");
                    div.style.display = "none";
                    body.appendChild(div);
                    div.innerHTML = html;
                    var text = div.innerText || div.textContent;
                    body.removeChild(div);
                    var trimRE = /\S/m;
                    if (!trimRE.test(text)) html = "";
                    return html;
                };
            })(jQuery);
            editor = $('#Question_Description').cleditor({ controls: "bold italic underline | bullets numbering | link unlink" });
            editor2 = $('#Question_DescriptionIngles').cleditor({ controls: "bold italic underline | bullets numbering | link unlink" });

            createEditor(editor);
            createEditor(editor2);

            function createEditor(objeto) {
                $(".cleditorMain iframe").each(function (index, obj) {
                    $(obj).contents().find('body').bind('paste', function () {
                        setTimeout(function () {
                            objeto[index].updateTextArea(objeto[index]);
                            var plainText = objeto[index].$area.val();
                            $(objeto[index].doc.body).html("");
                            $(objeto)[0].doc.execCommand("inserthtml", 0, plainText);
                        }, 100);
                    });
                });
            }

        });
     </script>
}
<div align="right">
    <ul id="MenuP">
        <li class="Menubig">@Resources.Global.Messages.DETAIL</li>
        <li>@Resources.Global.Messages.LIST</li>
    </ul>
    <div class="cont" align="left">
         @using (Html.BeginForm("Create", "Question", new { Area = "Admin" }, FormMethod.Post, new { id = "Form1", enctype = "multipart/form-data" }))
         {
        @Html.ValidationSummary()
        @Html.Hidden("GetOut", "0")
        @Html.Hidden("TempFiles")
        <hr />
        <div id="deepfolloweradmin">
            @Model.DeepFollower
        </div>
        @Html.Partial("_ContentPartial", Model);
        <div class="separator">
        </div>
        <div align="center" id="dvadicional" style="clear: both;">
            <h3>
                <img width="20" height="20" src="~/resources/images/nextwhite.png" /><span>@Resources.Global.Messages.ADDITIONAL_INFORMATION</span>
            </h3>
            @Html.HiddenFor(t => t.Question.ContentId)
            <ul class="template" id="fields">
                <li>
                  @Resources.Global.Messages.START_DATE *<br />
                  @Html.TextBoxFor(t => t.Question.StartDate, new { @class = "text", maxlength = "50", @Value = Model.Question == null ? "" : Model.Question.StartDate.Value.ToString("yyyy/MM/dd") })
                </li>
                <li>
                  @Resources.Global.Messages.END_DATE *<br />
                  @Html.TextBoxFor(t => t.Question.EndDate, new { @class = "text", maxlength = "50", @Value = Model.Question == null ? "" : Model.Question.EndDate.Value.ToString("yyyy/MM/dd") })
                </li>
                <li>
                  @Resources.Global.Messages.TYPE<br />
                  @{IEnumerable<SelectListItem> typeEnums = Enum.GetValues(typeof(Domain.Entities.Question.TypeQuestion)).Cast<Domain.Entities.Question.TypeQuestion>().Select(e=> new SelectListItem() { Text = e.ToString(), Value = e.ToString() });}
                  @Html.DropDownListFor(t => t.Question.Type, typeEnums, new { @class = "drops", @onchange = "changeQuestionType()" })
                </li>
                <li>
                  @Resources.Global.Messages.CONTENT <br />
                  @Html.EditorFor(t => t.Question.Description)
                </li>
                <li>
                    @Resources.Global.Messages.CONTENT2 <br />
                    @Html.EditorFor(t => t.Question.DescriptionIngles)
                </li>
                <li>
                  @Resources.Global.Messages.PRIZE<br />
                  @Html.TextBoxFor(t => t.Question.Prize, new { @class = "text", maxlength = "50" })
                </li>
                <li>
                    @Resources.Global.Messages.PRIZE2<br />
                    @Html.TextBoxFor(t => t.Question.PrizeIngles, new { @class = "text", maxlength = "50" })
                </li>
                <li id="questionLocation" style="display:@(Model.Question != null && Model.Question.Type.Equals(Domain.Entities.Question.TypeQuestion.Ubicacion) ? "block" : "none");">
                  @Resources.Global.Messages.LOCATION
                  <div id="map-canvas" style="height:400px; width:600px;"></div>
                  @Html.HiddenFor(t => t.Question.XCoordinate, new { @class = "text", maxlength = "50" })
                  @Html.HiddenFor(t => t.Question.YCoordinate, new { @class = "text", maxlength = "50" })
                </li>
                <li>
                  <div class="divcheck">
                      @Resources.Global.Messages.RECOMMENDED<br />
                      @Html.CheckBox("Question.Recommended", Model.Question != null && Model.Question.Recommended != null ? Model.Question.Recommended.Value : false, new { @class = "check" })
                  </div>
                  <div class="clear"></div>
                </li>
                <li id="questionAnswers" style="display:@(Model.Question == null || (Model.Question != null && Model.Question.Type.Equals(Domain.Entities.Question.TypeQuestion.Seleccion_Multiple)) ? "block" : "none");">
                  @Resources.Global.Messages.ANSWERS *<br />
                  <img onclick="questionAddAnswer()" border="0" width="23" height="23" src="@Url.Content("~/resources/images/25add.gif")" title="Agregar respuesta" />
                  <ul>
                    @if (Model.ListAnswers != null && Model.ListAnswers.Count() > 0)
                    {
                      foreach (Domain.Entities.Answer answer in Model.ListAnswers)
                      {
                      <li class="answer">
                        <iframe src="@Url.Content("~/Admin/Question/AnswerDetail?id="+answer.AnswerId)" style="height:160px; width:100%; overflow:hidden;" scrolling="no" frameBorder="0"></iframe>
                      </li>
                      }
                    }
                    else
                    {
                      for(int i = 1; i <= 2; i++){
                      <li class="answer">
                        <table>
                          <tbody>
                            <tr>
                              <th>Imagen</th>
                              <th>Texto</th>
                            </tr>
                            <tr>
                              <td><input type="file" id="answer-@(i)" name="fileanswer" class="fileanswer" maxlength="150" style="width: 150px;"></td>
                              <td><input type="text" name="txtanswer" maxlength="250" class="text"></td>
                            </tr>
                          </tbody>
                        </table>
                      </li>
                      }
                    }
                  </ul>
                </li>
            </ul>
        </div>
         }
        <div align="center" id="contentactions">
            <img onclick="$('#Form1').submit()" title="@Resources.Global.Messages.SAVE_EXIT" src="~/resources/images/45savewout.png" />
            @if (Model.IContent != null && Model.IContent.ContentId != null)
            {
                <img onclick="$('#GetOut').val('1');$('#Form1').submit()" title="@Resources.Global.Messages.SAVE" src="~/resources/images/45savew.png" />
            }
            <img onclick="window.location.href='@Url.Action("Index", "Content", new { Area = "Admin", mod = Model.Module.ModulId })'" title="@Resources.Global.Messages.CANCEL" src="~/resources/images/45cancelw.png" />
        </div>
    </div>
</div>
